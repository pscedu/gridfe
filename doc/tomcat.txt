$Id$

Configuration Tomcat for GridFE
===============================

Overview
========

There are two ways to setup Tomcat to serve GridFE:

(1) Tomcat runs standalone.  Under this mode, Tomcat listens on a
    port that Web browsers connect to directly.
(2) Apache delegates special requests to Tomcat.  Apache must be
    be configured to acknowledge such requests, which is enabled through
    the use of a "connector."

Tomcat must be made known of the GridFE root, which is done so through
a "context".

File					Edit?	Description
===============================================================================
/etc/tomcat/server.xml			Yes	Server-related configuration
/etc/tomcat/tomcat5.conf		Yes	System-related configuration
/etc/tomcat/web.xml				Web-related configuration
/etc/tomcat/workers2.properties		Yes	Tomcat connector configuration
/usr/share/tomcat				Tomcat general home
/var/www/gridfe					GridFE base
/var/www/gridfe/WEB-INF/web.xml		Yes	GridFE servlet configuration

Since GridFE requires many Java packages which currently do not work with
GNU Java, Sun Java must be installed at tomcat5.conf must be adjusted to
force Tomcat to use Sun Java.

Details
=======
There are severals implications of running Tomcat as either a standalone
or runner service.  If SSL is being used and Tomcat is running standalone,
it must handle SSL itself; whereas if Tomcat is set up as a runner service
under Apache, Apache can handle SSL duties and let Tomcat and the applications
it hosts worry about something other than SSL encryption/decryption.

To configure the Tomcat servlet runner service through Apache, add the
following to workers2.properties:

	========================================================================
	[uri:/gridfe]
	info=Grid Front End
	context=/gridfe
	debug=0

	[uri:/gridfe/*]
	info=Map all of GridFE
	========================================================================

Next, configure Tomcat to serve GridFE, specified in server.xml:

	========================================================================
	<Context path="/gridfe" docBase="gridfe" debug="0" reloadable="false"
	 crossContext="true" allowLinking="true">
	  <Logger className="org.apache.catalina.logger.FileLogger"
	   prefix="gridfe." suffix=".log" timestamp="true" />
	  <Resources className="org.apache.naming.resources.FileDirContext"
	   allowLinking="true" />
	</Context>
	========================================================================

Since this must be in an encompassing <Host> block, the `docBase' will
be relative to `Host appBase', so a symbolic link (or the actual GridFE
deployment) must be created to point from the appBase to the real GridFE
root location:

	# ln -s /var/www/gridfe /usr/share/tomcat

Apache Configuration
====================
The mod_jk2 Apache module must be activated, which will read
worker2.properties to set up the necessary Tomcat connectors.

	================================================================
	LoadModule jk2_module modules/mod_jk2.so
	================================================================

Consult doc/mod_fum.txt for instructions on installing/configuration
mod_fum with Apache.

Site Layout and Installation
============================
Java and CoG routines are used in GridFE, so these libraries will needed
to be added to the CLASSPATH.  The easiest, servlet-runner-independent
way to do this is to simply copy or symbolically link the following
libraries in $GRIDFE_ROOT/WEB-INF:

  jce-jdk13-$VERSION.jar

Next, the distribution needs to be built.  Change directory into the
GridFE source code root and run:

  $ make
  $ make install

After a successful build, the 'src' directory needs to be renamed to
'classes', as this is the name that Java servlet runners expect to find
the servlet classes:

  $ ln -s src classes

Some of the CoG code establishes connections to grid services using
the Java network framework, so the Java security manager must be
configured to allow outgoing connections to be made with sockets,
which can be done by creating an empty Java policy file in the
home directory of the user which the GridFE sevlet runs as
(e.g., user "apache"):

  $ touch /var/www/.java.policy

=====================

fileuploads - gridftp browser

- install commons-fileupload
- install commons-io
